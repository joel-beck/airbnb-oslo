
@article{bergstra2012,
  title    = {Random {{Search}} for {{Hyper-Parameter Optimization}}.},
  author   = {Bergstra, James and Bengio, Yoshua},
  year     = {2012},
  journal  = {J. Mach. Learn. Res.},
  volume   = {13},
  pages    = {281--305},
  url      = {http://dblp.uni-trier.de/db/journals/jmlr/jmlr13.html#BergstraB12},
  keywords = {dblp},
}

@article{breiman2001,
  title    = {Random {{Forests}}},
  author   = {Breiman, Leo},
  year     = {2001},
  month    = oct,
  journal  = {Machine Learning},
  volume   = {45},
  number   = {1},
  pages    = {5--32},
  issn     = {1573-0565},
  doi      = {10.1023/A:1010933404324},
  url      = {https://doi.org/10.1023/A:1010933404324},
  urldate  = {2022-02-09},
  abstract = {Random forests are a combination of tree predictors such that each tree depends on the values of a random vector sampled independently and with the same distribution for all trees in the forest. The generalization error for forests converges a.s. to a limit as the number of trees in the forest becomes large. The generalization error of a forest of tree classifiers depends on the strength of the individual trees in the forest and the correlation between them. Using a random selection of features to split each node yields error rates that compare favorably to Adaboost (Y. Freund \& R. Schapire, Machine Learning: Proceedings of the Thirteenth International conference, ***, 148\textendash 156), but are more robust with respect to noise. Internal estimates monitor error, strength, and correlation and these are used to show the response to increasing the number of features used in the splitting. Internal estimates are also used to measure variable importance. These ideas are also applicable to regression.},
  langid   = {english},
}

@misc{cai2019,
  title  = {Melbourne airbnb price prediction},
  author = {Cai, Tiancheng and Han, Kevin and Wu, Han},
  year   = {2019},
}

@article{chen2016,
  title         = {{{XGBoost}}: {{A Scalable Tree Boosting System}}},
  shorttitle    = {{{XGBoost}}},
  author        = {Chen, Tianqi and Guestrin, Carlos},
  year          = {2016},
  month         = aug,
  journal       = {Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
  eprint        = {1603.02754},
  eprinttype    = {arxiv},
  pages         = {785--794},
  doi           = {10.1145/2939672.2939785},
  url           = {http://arxiv.org/abs/1603.02754},
  urldate       = {2022-02-09},
  abstract      = {Tree boosting is a highly effective and widely used machine learning method. In this paper, we describe a scalable end-to-end tree boosting system called XGBoost, which is used widely by data scientists to achieve state-of-the-art results on many machine learning challenges. We propose a novel sparsity-aware algorithm for sparse data and weighted quantile sketch for approximate tree learning. More importantly, we provide insights on cache access patterns, data compression and sharding to build a scalable tree boosting system. By combining these insights, XGBoost scales beyond billions of examples using far fewer resources than existing systems.},
  archiveprefix = {arXiv},
  keywords      = {Computer Science - Machine Learning},
}

@book{chollet2018,
  title     = {Deep Learning with {{Python}}},
  author    = {Chollet, Fran{\c c}ois},
  year      = {2018},
  publisher = {{Manning Publications Co}},
  address   = {{Shelter Island, New York}},
  isbn      = {978-1-61729-443-3},
  langid    = {english},
  keywords  = {Machine learning,Neural networks (Computer science),Python (Computer program language)},
}

@misc{cox2022,
  title   = {Inside {{Airbnb}}},
  author  = {Cox, Murray},
  year    = {2022},
  journal = {Inside Airbnb},
  url     = {http://insideairbnb.com/get-the-data.html},
  urldate = {2022-02-27},
  langid  = {english},
}

@article{devlin2019,
  title         = {{{BERT}}: {{Pre-training}} of {{Deep Bidirectional Transformers}} for {{Language Understanding}}},
  shorttitle    = {{{BERT}}},
  author        = {Devlin, Jacob and Chang, Ming-Wei and Lee, Kenton and Toutanova, Kristina},
  year          = {2019},
  month         = may,
  journal       = {arXiv:1810.04805 [cs]},
  eprint        = {1810.04805},
  eprinttype    = {arxiv},
  primaryclass  = {cs},
  url           = {http://arxiv.org/abs/1810.04805},
  urldate       = {2022-02-09},
  abstract      = {We introduce a new language representation model called BERT, which stands for Bidirectional Encoder Representations from Transformers. Unlike recent language representation models, BERT is designed to pre-train deep bidirectional representations from unlabeled text by jointly conditioning on both left and right context in all layers. As a result, the pre-trained BERT model can be fine-tuned with just one additional output layer to create state-of-the-art models for a wide range of tasks, such as question answering and language inference, without substantial task-specific architecture modifications. BERT is conceptually simple and empirically powerful. It obtains new state-of-the-art results on eleven natural language processing tasks, including pushing the GLUE score to 80.5\% (7.7\% point absolute improvement), MultiNLI accuracy to 86.7\% (4.6\% absolute improvement), SQuAD v1.1 question answering Test F1 to 93.2 (1.5 point absolute improvement) and SQuAD v2.0 Test F1 to 83.1 (5.1 point absolute improvement).},
  archiveprefix = {arXiv},
  keywords      = {Computer Science - Computation and Language},
}

@article{goodfellow2015,
  title         = {Explaining and {{Harnessing Adversarial Examples}}},
  author        = {Goodfellow, Ian J. and Shlens, Jonathon and Szegedy, Christian},
  year          = {2015},
  month         = mar,
  journal       = {arXiv:1412.6572 [cs, stat]},
  eprint        = {1412.6572},
  eprinttype    = {arxiv},
  primaryclass  = {cs, stat},
  url           = {http://arxiv.org/abs/1412.6572},
  urldate       = {2022-02-09},
  abstract      = {Several machine learning models, including neural networks, consistently misclassify adversarial examples---inputs formed by applying small but intentionally worst-case perturbations to examples from the dataset, such that the perturbed input results in the model outputting an incorrect answer with high confidence. Early attempts at explaining this phenomenon focused on nonlinearity and overfitting. We argue instead that the primary cause of neural networks' vulnerability to adversarial perturbation is their linear nature. This explanation is supported by new quantitative results while giving the first explanation of the most intriguing fact about them: their generalization across architectures and training sets. Moreover, this view yields a simple and fast method of generating adversarial examples. Using this approach to provide examples for adversarial training, we reduce the test set error of a maxout network on the MNIST dataset.},
  archiveprefix = {arXiv},
  keywords      = {Computer Science - Machine Learning,Statistics - Machine Learning},
}

@book{goodfellow2016,
  title     = {Deep {{Learning}}},
  author    = {Goodfellow, Ian and Bengio, Yoshua and Courville, Aaron},
  year      = {2016},
  publisher = {{MIT Press}},
}

@book{gulli2017,
  title      = {Deep Learning with {{Keras}}: Implement Neural Networks with {{Keras}} on {{Theano}} and {{TensorFlow}}},
  shorttitle = {Deep Learning with {{Keras}}},
  author     = {Gull{\`i}, Antonio and Pal, Sujit},
  year       = {2017},
  publisher  = {{Packt}},
  address    = {{Birmingham Mumbai}},
  isbn       = {978-1-78712-842-2 978-1-78712-903-0},
  langid     = {english},
}

@article{he2015,
  title         = {Deep {{Residual Learning}} for {{Image Recognition}}},
  author        = {He, Kaiming and Zhang, Xiangyu and Ren, Shaoqing and Sun, Jian},
  year          = {2015},
  month         = dec,
  journal       = {arXiv:1512.03385 [cs]},
  eprint        = {1512.03385},
  eprinttype    = {arxiv},
  primaryclass  = {cs},
  url           = {http://arxiv.org/abs/1512.03385},
  urldate       = {2022-01-22},
  abstract      = {Deeper neural networks are more difficult to train. We present a residual learning framework to ease the training of networks that are substantially deeper than those used previously. We explicitly reformulate the layers as learning residual functions with reference to the layer inputs, instead of learning unreferenced functions. We provide comprehensive empirical evidence showing that these residual networks are easier to optimize, and can gain accuracy from considerably increased depth. On the ImageNet dataset we evaluate residual nets with a depth of up to 152 layers---8x deeper than VGG nets but still having lower complexity. An ensemble of these residual nets achieves 3.57\% error on the ImageNet test set. This result won the 1st place on the ILSVRC 2015 classification task. We also present analysis on CIFAR-10 with 100 and 1000 layers. The depth of representations is of central importance for many visual recognition tasks. Solely due to our extremely deep representations, we obtain a 28\% relative improvement on the COCO object detection dataset. Deep residual nets are foundations of our submissions to ILSVRC \& COCO 2015 competitions, where we also won the 1st places on the tasks of ImageNet detection, ImageNet localization, COCO detection, and COCO segmentation.},
  archiveprefix = {arXiv},
  keywords      = {Deep Learning,Deep Learning Paper,ResNet},
}

@article{hope2017,
  title  = {Learning {{TensorFlow}}},
  author = {Hope, Tom and Resheff, Yehezkel S and Lieder, Itay},
  year   = {2017},
  langid = {english},
}

@article{ioffe2015,
  title         = {Batch {{Normalization}}: {{Accelerating Deep Network Training}} by {{Reducing Internal Covariate Shift}}},
  shorttitle    = {Batch {{Normalization}}},
  author        = {Ioffe, Sergey and Szegedy, Christian},
  year          = {2015},
  month         = mar,
  journal       = {arXiv:1502.03167 [cs]},
  eprint        = {1502.03167},
  eprinttype    = {arxiv},
  primaryclass  = {cs},
  url           = {http://arxiv.org/abs/1502.03167},
  urldate       = {2022-02-09},
  abstract      = {Training Deep Neural Networks is complicated by the fact that the distribution of each layer's inputs changes during training, as the parameters of the previous layers change. This slows down the training by requiring lower learning rates and careful parameter initialization, and makes it notoriously hard to train models with saturating nonlinearities. We refer to this phenomenon as internal covariate shift, and address the problem by normalizing layer inputs. Our method draws its strength from making normalization a part of the model architecture and performing the normalization for each training mini-batch. Batch Normalization allows us to use much higher learning rates and be less careful about initialization. It also acts as a regularizer, in some cases eliminating the need for Dropout. Applied to a state-of-the-art image classification model, Batch Normalization achieves the same accuracy with 14 times fewer training steps, and beats the original model by a significant margin. Using an ensemble of batch-normalized networks, we improve upon the best published result on ImageNet classification: reaching 4.9\% top-5 validation error (and 4.8\% test error), exceeding the accuracy of human raters.},
  archiveprefix = {arXiv},
  keywords      = {Computer Science - Machine Learning},
}

@inproceedings{ke2017,
  title      = {{{LightGBM}}: {{A Highly Efficient Gradient Boosting Decision Tree}}},
  shorttitle = {{{LightGBM}}},
  booktitle  = {Advances in {{Neural Information Processing Systems}}},
  author     = {Ke, Guolin and Meng, Qi and Finley, Thomas and Wang, Taifeng and Chen, Wei and Ma, Weidong and Ye, Qiwei and Liu, Tie-Yan},
  year       = {2017},
  volume     = {30},
  publisher  = {{Curran Associates, Inc.}},
  url        = {https://papers.nips.cc/paper/2017/hash/6449f44a102fde848669bdd9eb6b76fa-Abstract.html},
  urldate    = {2022-02-09},
}

@article{kingma2014,
  title         = {Auto-{{Encoding Variational Bayes}}},
  author        = {Kingma, Diederik P. and Welling, Max},
  year          = {2014},
  month         = may,
  journal       = {arXiv:1312.6114 [cs, stat]},
  eprint        = {1312.6114},
  eprinttype    = {arxiv},
  primaryclass  = {cs, stat},
  url           = {http://arxiv.org/abs/1312.6114},
  urldate       = {2022-02-09},
  abstract      = {How can we perform efficient inference and learning in directed probabilistic models, in the presence of continuous latent variables with intractable posterior distributions, and large datasets? We introduce a stochastic variational inference and learning algorithm that scales to large datasets and, under some mild differentiability conditions, even works in the intractable case. Our contributions is two-fold. First, we show that a reparameterization of the variational lower bound yields a lower bound estimator that can be straightforwardly optimized using standard stochastic gradient methods. Second, we show that for i.i.d. datasets with continuous latent variables per datapoint, posterior inference can be made especially efficient by fitting an approximate inference model (also called a recognition model) to the intractable posterior using the proposed lower bound estimator. Theoretical advantages are reflected in experimental results.},
  archiveprefix = {arXiv},
  keywords      = {Computer Science - Machine Learning,Statistics - Machine Learning},
}

@article{kingma2017,
  title         = {Adam: {{A Method}} for {{Stochastic Optimization}}},
  shorttitle    = {Adam},
  author        = {Kingma, Diederik P. and Ba, Jimmy},
  year          = {2017},
  month         = jan,
  journal       = {arXiv:1412.6980 [cs]},
  eprint        = {1412.6980},
  eprinttype    = {arxiv},
  primaryclass  = {cs},
  url           = {http://arxiv.org/abs/1412.6980},
  urldate       = {2022-01-22},
  abstract      = {We introduce Adam, an algorithm for first-order gradient-based optimization of stochastic objective functions, based on adaptive estimates of lower-order moments. The method is straightforward to implement, is computationally efficient, has little memory requirements, is invariant to diagonal rescaling of the gradients, and is well suited for problems that are large in terms of data and/or parameters. The method is also appropriate for non-stationary objectives and problems with very noisy and/or sparse gradients. The hyper-parameters have intuitive interpretations and typically require little tuning. Some connections to related algorithms, on which Adam was inspired, are discussed. We also analyze the theoretical convergence properties of the algorithm and provide a regret bound on the convergence rate that is comparable to the best known results under the online convex optimization framework. Empirical results demonstrate that Adam works well in practice and compares favorably to other stochastic optimization methods. Finally, we discuss AdaMax, a variant of Adam based on the infinity norm.},
  archiveprefix = {arXiv},
  keywords      = {Computer Science - Machine Learning,Deep Learning,Deep Learning Paper},
}

@book{kirk2017,
  title      = {Thoughtful Machine Learning with {{Python}}: A Test-Driven Approach},
  shorttitle = {Thoughtful Machine Learning with {{Python}}},
  author     = {Kirk, Matthew},
  year       = {2017},
  edition    = {First edition},
  publisher  = {{O'Reilly}},
  address    = {{Beijing ; Boston}},
  isbn       = {978-1-4919-2413-6},
  keywords   = {Machine learning,Python (Computer program language)},
}

@incollection{paszke2019,
  title     = {{{PyTorch}}: {{An Imperative Style}}, {{High-Performance Deep Learning Library}}},
  booktitle = {Advances in {{Neural Information Processing Systems}} 32},
  author    = {Paszke, Adam and Gross, Sam and Massa, Francisco and Lerer, Adam and Bradbury, James and Chanan, Gregory and Killeen, Trevor and Lin, Zeming and Gimelshein, Natalia and Antiga, Luca and Desmaison, Alban and Kopf, Andreas and Yang, Edward and DeVito, Zachary and Raison, Martin and Tejani, Alykhan and Chilamkurthy, Sasank and Steiner, Benoit and Fang, Lu and Bai, Junjie and Chintala, Soumith},
  editor    = {Wallach, H. and Larochelle, H. and Beygelzimer, A. and d'{\aftergroup\ignorespaces} {Alch{\'e}-Buc}, F. and Fox, E. and Garnett, R.},
  year      = {2019},
  pages     = {8024--8035},
  publisher = {{Curran Associates, Inc.}},
  url       = {http://papers.neurips.cc/paper/9015-pytorch-an-imperative-style-high-performance-deep-learning-library.pdf},
}

@article{pedregosa2011,
  title   = {Scikit-Learn: {{Machine Learning}} in {{Python}}},
  author  = {Pedregosa, F. and Varoquaux, G. and Gramfort, A. and Michel, V. and Thirion, B. and Grisel, O. and Blondel, M. and Prettenhofer, P. and Weiss, R. and Dubourg, V. and Vanderplas, J. and Passos, A. and Cournapeau, D. and Brucher, M. and Perrot, M. and Duchesnay, E.},
  year    = {2011},
  journal = {Journal of Machine Learning Research},
  volume  = {12},
  pages   = {2825--2830},
}

@inproceedings{rezazadeh2021,
  title        = {Airbnb price prediction using machine learning and sentiment analysis},
  author       = {Rezazadeh Kalehbasti, Pouya and Nikolenko, Liubov and Rezaei, Hoormazd},
  booktitle    = {International Cross-Domain Conference for Machine Learning and Knowledge Extraction},
  pages        = {173--184},
  year         = {2021},
  organization = {Springer},
}

@article{russakovsky2015,
  title         = {{{ImageNet Large Scale Visual Recognition Challenge}}},
  author        = {Russakovsky, Olga and Deng, Jia and Su, Hao and Krause, Jonathan and Satheesh, Sanjeev and Ma, Sean and Huang, Zhiheng and Karpathy, Andrej and Khosla, Aditya and Bernstein, Michael and Berg, Alexander C. and {Fei-Fei}, Li},
  year          = {2015},
  month         = jan,
  journal       = {arXiv:1409.0575 [cs]},
  eprint        = {1409.0575},
  eprinttype    = {arxiv},
  primaryclass  = {cs},
  url           = {http://arxiv.org/abs/1409.0575},
  urldate       = {2022-02-09},
  abstract      = {The ImageNet Large Scale Visual Recognition Challenge is a benchmark in object category classification and detection on hundreds of object categories and millions of images. The challenge has been run annually from 2010 to present, attracting participation from more than fifty institutions. This paper describes the creation of this benchmark dataset and the advances in object recognition that have been possible as a result. We discuss the challenges of collecting large-scale ground truth annotation, highlight key breakthroughs in categorical object recognition, provide a detailed analysis of the current state of the field of large-scale image classification and object detection, and compare the state-of-the-art computer vision accuracy with human accuracy. We conclude with lessons learned in the five years of the challenge, and propose future directions and improvements.},
  archiveprefix = {arXiv},
  keywords      = {Computer Science - Computer Vision and Pattern Recognition,I.4.8,I.5.2},
}

@article{sanh2020,
  title         = {{{DistilBERT}}, a Distilled Version of {{BERT}}: Smaller, Faster, Cheaper and Lighter},
  shorttitle    = {{{DistilBERT}}, a Distilled Version of {{BERT}}},
  author        = {Sanh, Victor and Debut, Lysandre and Chaumond, Julien and Wolf, Thomas},
  year          = {2020},
  month         = feb,
  journal       = {arXiv:1910.01108 [cs]},
  eprint        = {1910.01108},
  eprinttype    = {arxiv},
  primaryclass  = {cs},
  url           = {http://arxiv.org/abs/1910.01108},
  urldate       = {2022-02-09},
  abstract      = {As Transfer Learning from large-scale pre-trained models becomes more prevalent in Natural Language Processing (NLP), operating these large models in on-the-edge and/or under constrained computational training or inference budgets remains challenging. In this work, we propose a method to pre-train a smaller general-purpose language representation model, called DistilBERT, which can then be fine-tuned with good performances on a wide range of tasks like its larger counterparts. While most prior work investigated the use of distillation for building task-specific models, we leverage knowledge distillation during the pre-training phase and show that it is possible to reduce the size of a BERT model by 40\%, while retaining 97\% of its language understanding capabilities and being 60\% faster. To leverage the inductive biases learned by larger models during pre-training, we introduce a triple loss combining language modeling, distillation and cosine-distance losses. Our smaller, faster and lighter model is cheaper to pre-train and we demonstrate its capabilities for on-device computations in a proof-of-concept experiment and a comparative on-device study.},
  archiveprefix = {arXiv},
  keywords      = {Computer Science - Computation and Language},
}

@misc{selvaraj2020,
  title   = {A {{Beginner}}'s {{Guide}} to {{Sentiment Analysis}} with {{Python}}},
  author  = {Selvaraj, Natassha},
  year    = {2020},
  month   = sep,
  journal = {Towards Data Science},
  url     = {https://towardsdatascience.com/a-beginners-guide-to-sentiment-analysis-in-python-95e354ea84f6},
}

@article{srivastava2014,
  title      = {Dropout: {{A Simple Way}} to {{Prevent Neural Networks}} from {{Overfitting}}},
  shorttitle = {Dropout},
  author     = {Srivastava, Nitish and Hinton, Geoffrey and Krizhevsky, Alex and Sutskever, Ilya and Salakhutdinov, Ruslan},
  year       = {2014},
  journal    = {Journal of Machine Learning Research},
  volume     = {15},
  number     = {56},
  pages      = {1929--1958},
  issn       = {1533-7928},
  url        = {http://jmlr.org/papers/v15/srivastava14a.html},
  urldate    = {2022-02-09},
  abstract   = {Deep neural nets with a large number of parameters are very powerful machine learning systems. However, overfitting is a serious problem in such networks. Large networks are also slow to use, making it difficult to deal with overfitting by combining the predictions of many different large neural nets at test time. Dropout is a technique for addressing this problem. The key idea is to randomly drop units (along with their connections) from the neural network during training. This prevents units from co-adapting too much. During training, dropout samples from an exponential number of different \^athinned\^a networks. At test time, it is easy to approximate the effect of averaging the predictions of all these thinned networks by simply using a single unthinned network that has smaller weights. This significantly reduces overfitting and gives major improvements over other regularization methods. We show that dropout improves the performance of neural networks on supervised learning tasks in vision, speech recognition, document classification and computational biology, obtaining state-of-the-art results on many benchmark data sets.},
}

@article{tang2015,
  title   = {Neighborhood and price prediction for San Francisco Airbnb listings},
  author  = {Tang, Emily and Sangani, Kunal},
  journal = {Departments of Computer science, Psychology, economics--Stanford University},
  year    = {2015},
}

@article{zhang2021,
  title         = {Dive into {{Deep Learning}}},
  author        = {Zhang, Aston and Lipton, Zachary C. and Li, Mu and Smola, Alexander J.},
  year          = {2021},
  journal       = {arXiv preprint arXiv:2106.11342},
  eprint        = {2106.11342},
  eprinttype    = {arxiv},
  archiveprefix = {arXiv},
}