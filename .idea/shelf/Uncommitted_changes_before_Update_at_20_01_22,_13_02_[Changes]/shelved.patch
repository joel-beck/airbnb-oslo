Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"ba3cf542-0aa8-45c3-a12b-73670ff92cbd\" name=\"Changes\" comment=\"added some comments\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectId\" id=\"228oarY7JECksvTqyYxQ2ft76k4\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.keymap\" />\n  </component>\n  <component name=\"PyConsoleOptionsProvider\">\n    <option name=\"myPythonConsoleState\">\n      <console-settings>\n        <option name=\"useSoftWraps\" value=\"true\" />\n      </console-settings>\n    </option>\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/models\" />\n      <recent name=\"$PROJECT_DIR$/exploratory\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Python.feature_selection\">\n    <configuration name=\"classical_models\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"airbnb-oslo\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../anaconda3/envs/airbnb-oslo/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/models\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/models/classical_models.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"eda_listings\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"airbnb-oslo\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../anaconda3/envs/airbnb-oslo/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/exploratory\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/exploratory/eda_listings.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"feature_selection\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../anaconda3/envs/airbnb-oslo/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/data-clean\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/data-clean/feature_selection.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"fully_connected\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"airbnb-oslo\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../anaconda3/envs/airbnb-oslo/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/models\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/models/fully_connected.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"metric_NN\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"airbnb-oslo\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../anaconda3/envs/airbnb-oslo/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/models\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/models/metric_NN.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"pytorch_helpers\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"airbnb-oslo\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../anaconda3/envs/airbnb-oslo/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/models\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/models/pytorch_helpers.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"result_analysis\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"airbnb-oslo\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"$PROJECT_DIR$/../anaconda3/envs/airbnb-oslo/bin/python\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/models\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/models/result_analysis.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Python.eda_listings\" />\n      <item itemvalue=\"Python.classical_models\" />\n      <item itemvalue=\"Python.pytorch_helpers\" />\n      <item itemvalue=\"Python.metric_NN\" />\n      <item itemvalue=\"Python.result_analysis\" />\n      <item itemvalue=\"Python.fully_connected\" />\n      <item itemvalue=\"Python.feature_selection\" />\n    </list>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"ba3cf542-0aa8-45c3-a12b-73670ff92cbd\" name=\"Changes\" comment=\"\" />\n      <created>1639228641953</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1639228641953</updated>\n      <workItem from=\"1639228643275\" duration=\"1241000\" />\n      <workItem from=\"1639383779022\" duration=\"8476000\" />\n      <workItem from=\"1639499356204\" duration=\"7804000\" />\n      <workItem from=\"1640098483746\" duration=\"2524000\" />\n      <workItem from=\"1640181705847\" duration=\"5044000\" />\n      <workItem from=\"1641200214953\" duration=\"3287000\" />\n      <workItem from=\"1641288481471\" duration=\"128000\" />\n      <workItem from=\"1641368408561\" duration=\"13099000\" />\n      <workItem from=\"1641542008479\" duration=\"10222000\" />\n      <workItem from=\"1641802079261\" duration=\"1797000\" />\n      <workItem from=\"1641890856436\" duration=\"5267000\" />\n      <workItem from=\"1642077374189\" duration=\"4303000\" />\n      <workItem from=\"1642154592923\" duration=\"6632000\" />\n      <workItem from=\"1642251585600\" duration=\"2973000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"text processing\">\n      <created>1639245833768</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1639245833768</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"displayes seaborn plots\">\n      <created>1639384853567</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1639384853567</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"getting started with a multiple linear regression\">\n      <created>1639428622113</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1639428622113</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"getting familiar with amenities\">\n      <created>1639559438504</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1639559438504</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"tried to get familiar with the classical models\">\n      <created>1641281424669</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1641281424669</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"implemented NN structure for the metric NN, added therefore functions to pytorch_helpers\">\n      <created>1641384618526</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1641384618526</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"started to train the NN\">\n      <created>1641401363968</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1641401363968</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"added lr scheduler and weight_decay option\">\n      <created>1642165577277</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1642165577277</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"added some comments\">\n      <created>1642165690210</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1642165690210</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"10\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"text processing\" />\n    <MESSAGE value=\"displayes seaborn plots\" />\n    <MESSAGE value=\"getting started with a multiple linear regression\" />\n    <MESSAGE value=\"getting familiar with amenities\" />\n    <MESSAGE value=\"tried to get familiar with the classical models\" />\n    <MESSAGE value=\"implemented NN structure for the metric NN, added therefore functions to pytorch_helpers\" />\n    <MESSAGE value=\"started to train the NN\" />\n    <MESSAGE value=\"added lr scheduler; changed plot_regression y axis scale\" />\n    <MESSAGE value=\"added lr scheduler and weight_decay option\" />\n    <MESSAGE value=\"added some comments\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"added some comments\" />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/airbnb_oslo$result_analysis.coverage\" NAME=\"result_analysis Coverage Results\" MODIFIED=\"1641918329621\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/models\" />\n    <SUITE FILE_PATH=\"coverage/airbnb_oslo$pytorch_helpers.coverage\" NAME=\"pytorch_helpers Coverage Results\" MODIFIED=\"1641380705251\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/models\" />\n    <SUITE FILE_PATH=\"coverage/airbnb_oslo$fully_connected.coverage\" NAME=\"fully_connected Coverage Results\" MODIFIED=\"1642165192701\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/models\" />\n    <SUITE FILE_PATH=\"coverage/airbnb_oslo$eda_listings.coverage\" NAME=\"eda_listings Coverage Results\" MODIFIED=\"1639384501930\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/exploratory\" />\n    <SUITE FILE_PATH=\"coverage/airbnb_oslo$metric_NN.coverage\" NAME=\"metric_NN Coverage Results\" MODIFIED=\"1641553264808\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/models\" />\n    <SUITE FILE_PATH=\"coverage/airbnb_oslo$classical_models.coverage\" NAME=\"classical_models Coverage Results\" MODIFIED=\"1641200740198\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/models\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ca36598c58d75074e28f0972740cb05835f872b0)
+++ b/.idea/workspace.xml	(date 1642680150464)
@@ -4,7 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ba3cf542-0aa8-45c3-a12b-73670ff92cbd" name="Changes" comment="added some comments" />
+    <list default="true" id="ba3cf542-0aa8-45c3-a12b-73670ff92cbd" name="Changes" comment="added some comments">
+      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/models/extended_models.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/models/extended_models.ipynb" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -30,15 +36,17 @@
   </component>
   <component name="PropertiesComponent">
     <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
+    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="WebServerToolWindowFactoryState" value="false" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$" />
     <property name="node.js.detected.package.eslint" value="true" />
     <property name="node.js.detected.package.tslint" value="true" />
     <property name="node.js.selected.package.eslint" value="(autodetect)" />
     <property name="node.js.selected.package.tslint" value="(autodetect)" />
-    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
+    <property name="settings.editor.selected.configurable" value="project.propVCSSupport.Mappings" />
   </component>
   <component name="PyConsoleOptionsProvider">
     <option name="myPythonConsoleState">
@@ -239,7 +247,12 @@
       <workItem from="1641890856436" duration="5267000" />
       <workItem from="1642077374189" duration="4303000" />
       <workItem from="1642154592923" duration="6632000" />
-      <workItem from="1642251585600" duration="2973000" />
+      <workItem from="1642251585600" duration="3683000" />
+      <workItem from="1642405894287" duration="2470000" />
+      <workItem from="1642425261361" duration="599000" />
+      <workItem from="1642450588456" duration="1000" />
+      <workItem from="1642665737225" duration="660000" />
+      <workItem from="1642669482466" duration="2879000" />
     </task>
     <task id="LOCAL-00001" summary="text processing">
       <created>1639245833768</created>
@@ -341,6 +354,7 @@
     <SUITE FILE_PATH="coverage/airbnb_oslo$pytorch_helpers.coverage" NAME="pytorch_helpers Coverage Results" MODIFIED="1641380705251" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/models" />
     <SUITE FILE_PATH="coverage/airbnb_oslo$fully_connected.coverage" NAME="fully_connected Coverage Results" MODIFIED="1642165192701" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/models" />
     <SUITE FILE_PATH="coverage/airbnb_oslo$eda_listings.coverage" NAME="eda_listings Coverage Results" MODIFIED="1639384501930" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/exploratory" />
+    <SUITE FILE_PATH="coverage/airbnb_oslo$feature_selection.coverage" NAME="feature_selection Coverage Results" MODIFIED="1642263418159" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/data-clean" />
     <SUITE FILE_PATH="coverage/airbnb_oslo$metric_NN.coverage" NAME="metric_NN Coverage Results" MODIFIED="1641553264808" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/models" />
     <SUITE FILE_PATH="coverage/airbnb_oslo$classical_models.coverage" NAME="classical_models Coverage Results" MODIFIED="1641200740198" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/models" />
   </component>
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1642665756642)
+++ b/.idea/vcs.xml	(date 1642665756642)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	(date 1642665756644)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1642665756644)
@@ -0,0 +1,12 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="PyPep8Inspection" enabled="true" level="WEAK WARNING" enabled_by_default="true">
+      <option name="ignoredErrors">
+        <list>
+          <option value="E265" />
+        </list>
+      </option>
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1642665756643)
+++ b/.idea/inspectionProfiles/profiles_settings.xml	(date 1642665756643)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: models/extended_models.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"cells\":[{\"cell_type\":\"code\",\"execution_count\":10,\"metadata\":{},\"outputs\":[],\"source\":[\"from warnings import simplefilter\\n\",\"\\n\",\"import matplotlib.pyplot as plt\\n\",\"import numpy as np\\n\",\"import pandas as pd\\n\",\"import seaborn as sns\\n\",\"from sklearn.compose import TransformedTargetRegressor\\n\",\"from sklearn.feature_selection import RFE\\n\",\"from sklearn.linear_model import LinearRegression\\n\",\"from sklearn.metrics import mean_absolute_error\\n\",\"from sklearn.pipeline import make_pipeline\\n\",\"from sklearn.svm import SVR\\n\",\"\\n\",\"from sklearn_helpers import (\\n\",\"    ResultContainer,\\n\",\"    fit_models,\\n\",\"    get_column_transformer,\\n\",\"    get_models,\\n\",\"    get_preprocessor,\\n\",\"    show_coefficients,\\n\",\")\\n\",\"\\n\",\"simplefilter(action=\\\"ignore\\\", category=FutureWarning)\\n\",\"pd.set_option(\\\"precision\\\", 3)\\n\",\"pd.set_option(\\\"display.max_columns\\\", 100)\\n\",\"sns.set_theme(style=\\\"whitegrid\\\")\\n\"]},{\"cell_type\":\"code\",\"execution_count\":11,\"metadata\":{},\"outputs\":[{\"data\":{\"text/plain\":[\"(2601, 39)\"]},\"execution_count\":11,\"metadata\":{},\"output_type\":\"execute_result\"}],\"source\":[\"# NOTE: For Experimentation we train model on the entire data set without splitting in training and test set\\n\",\"listings_extended = pd.read_pickle(\\\"../data-clean/listings_extended.pkl\\\")\\n\",\"X = listings_extended.drop(columns=\\\"price\\\")\\n\",\"y = listings_extended[\\\"price\\\"]\\n\",\"\\n\",\"X.shape\\n\"]},{\"cell_type\":\"code\",\"execution_count\":12,\"metadata\":{},\"outputs\":[{\"data\":{\"image/png\":\"\",\"text/plain\":[\"<Figure size 432x288 with 1 Axes>\"]},\"metadata\":{},\"output_type\":\"display_data\"},{\"data\":{\"image/png\":\"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8UWOb7J2dnYsXLiQjz/+mPT0dDQaDZ9++inNmjXj1KlThW73okWLmD9/Pv7+/pibm6PX6xk4cCCvv/46AMHBwcyePZvNmzeTmZmJr68v/v7+aDQaFi1axLx588jIyEApxbx582jYsCE3b9584n5btWrF5MmTDYP59vb2/Pvf/+bq1auGdf7xj3/w2WefMWjQIHQ6HW3atCEoKOiJ2/b29mbUqFEsXrw416SML730Ej/88ANt27bFzMyMqlWr5jlt/OPbKSx3d3fDN/HHDRgwgEOHDuHp6Um9evV4/vnnDT2VadOmMWfOHMPv1wsvvGB4b0pC3bp1CQ4OZsqUKeh0OqytrZk/fz52dnb5/hwh/wH4ESNGcP36dfz8/NBqtQwbNszwRWbhwoXA098Vs02bNsycOZO3336brKwsatasadhmZSBzcwkhhCg2OcwlhBCi2CRMhBBCFJuEiShVN2/epFWrVrnuBAgQFBREq1atnnpKkaK6cOECrVq1Mlzcl23x4sV5Tp/xNAo79czTTGdy8+ZN2rRpg5+fX67/jDmdzuMSEhL45z//ycCBA/H29s5z2pzly5fneB9SUlKYNGkS/fv3p1+/fnz//fd5bjstLY1//vOf9O3bFy8vL8P0PKLskQF4UeqsrKy4cuUKt27dMtw/PfvakNK0evVqfH19WbVqFWPGjCnUdRXGEhkZWajrXB73pNsRl4agoCCaN2/O559/zt27d/H19aVbt26GU24jIyP57rvvctwa+IcffqBq1ars2LGD5ORkfHx86NKlS64r0RcvXkz16tXZuXMnt2/fZtiwYTg7O+c6nVeYnoSJKHXm5ub07duX7du3G84s2717N3369DFcaAiwb98+li5dilarpWrVqkyZMoWOHTsSFxfHjBkzuHfvHrGxsTg5ObFgwQLq1KmT73Qlj0tOTmb79u1s2LCBP/74g127duHj42N4/q+//iIgIIAHDx4YztKxtrZm9erVrF27FktLS6ysrJg9ezYtWrTg0qVLzJ49m4SEBDQaDWPGjGHgwIE59hkUFGSYUubRx40bN84xnUlAQABLly5l9+7d6PV6nJycmDlzJvXq1SvS+7x582Y2btxIWloa1tbWDBo0KMfj0NBQvvrqK3788UfMzc1p1qwZH330Efb29rmmN2nQoAFr167l22+/zbGPhIQEjhw5wvz584GH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\",\"text/plain\":[\"<Figure size 432x432 with 1 Axes>\"]},\"metadata\":{},\"output_type\":\"display_data\"},{\"data\":{\"image/png\":\"\",\"text/plain\":[\"<Figure size 432x288 with 1 Axes>\"]},\"metadata\":{},\"output_type\":\"display_data\"},{\"data\":{\"image/png\":\"\",\"text/plain\":[\"<Figure size 432x432 with 1 Axes>\"]},\"metadata\":{},\"output_type\":\"display_data\"}],\"source\":[\"# SUBSECTION: Exploration of CNN Price Predictions\\n\",\"\\n\",\"# Pretrained CNN\\n\",\"sns.histplot(X[\\\"cnn_pretrained_predictions\\\"]).set(\\n\",\"    title=\\\"Price Predictions of Pretrained CNN\\\"\\n\",\")\\n\",\"\\n\",\"# Correlation of price predictions and true price pretty much zero\\n\",\"cor = y.astype(\\\"float\\\").corr(X[\\\"cnn_pretrained_predictions\\\"])\\n\",\"mae = mean_absolute_error(y, X[\\\"cnn_pretrained_predictions\\\"])\\n\",\"price_range = [y.min(), y.max()]\\n\",\"\\n\",\"fig, ax = plt.subplots(figsize=(6, 6))\\n\",\"ax.scatter(y, X[\\\"cnn_pretrained_predictions\\\"])\\n\",\"ax.plot(price_range, price_range, linestyle=\\\"dashed\\\", color=\\\"grey\\\")\\n\",\"ax.set(\\n\",\"    xlabel=\\\"True Price\\\",\\n\",\"    ylabel=\\\"Predictions\\\",\\n\",\"    title=f\\\"Pretrained CNN:\\\\nCorrelation Coefficient with true Price: {cor:.3f}\\\\nMean Absolute Error: {mae:.1f}\\\",\\n\",\")\\n\",\"plt.show()\\n\",\"\\n\",\"# Custom CNN\\n\",\"sns.histplot(X[\\\"cnn_predictions\\\"]).set(title=\\\"Price Predictions of Custom CNN\\\")\\n\",\"\\n\",\"# Correlation of price predictions and true price pretty much zero\\n\",\"cor = y.astype(\\\"float\\\").corr(X[\\\"cnn_predictions\\\"])\\n\",\"mae = mean_absolute_error(y, X[\\\"cnn_predictions\\\"])\\n\",\"price_range = [y.min(), y.max()]\\n\",\"\\n\",\"fig, ax = plt.subplots(figsize=(6, 6))\\n\",\"ax.scatter(y, X[\\\"cnn_predictions\\\"])\\n\",\"ax.plot(price_range, price_range, linestyle=\\\"dashed\\\", color=\\\"grey\\\")\\n\",\"ax.set(\\n\",\"    xlabel=\\\"True Price\\\",\\n\",\"    ylabel=\\\"Predictions\\\",\\n\",\"    title=f\\\"Custom CNN:\\\\nCorrelation Coefficient with true Price: {cor:.3f}\\\\nMean Absolute Error: {mae:.1f}\\\",\\n\",\")\\n\",\"plt.show()\\n\"]},{\"cell_type\":\"code\",\"execution_count\":13,\"metadata\":{},\"outputs\":[],\"source\":[\"column_transformer = get_column_transformer()\\n\"]},{\"cell_type\":\"code\",\"execution_count\":14,\"metadata\":{},\"outputs\":[{\"data\":{\"text/html\":[\"<div>\\n\",\"<style scoped>\\n\",\"    .dataframe tbody tr th:only-of-type {\\n\",\"        vertical-align: middle;\\n\",\"    }\\n\",\"\\n\",\"    .dataframe tbody tr th {\\n\",\"        vertical-align: top;\\n\",\"    }\\n\",\"\\n\",\"    .dataframe thead th {\\n\",\"        text-align: right;\\n\",\"    }\\n\",\"</style>\\n\",\"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\"  <thead>\\n\",\"    <tr style=\\\"text-align: right;\\\">\\n\",\"      <th></th>\\n\",\"      <th>feature</th>\\n\",\"      <th>coefficient</th>\\n\",\"    </tr>\\n\",\"  </thead>\\n\",\"  <tbody>\\n\",\"    <tr>\\n\",\"      <th>0</th>\\n\",\"      <td>neighbourhood_Sentrum</td>\\n\",\"      <td>0.291</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>1</th>\\n\",\"      <td>neighbourhood_Frogner</td>\\n\",\"      <td>0.259</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>2</th>\\n\",\"      <td>neighbourhood_St. Hanshaugen</td>\\n\",\"      <td>0.223</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>3</th>\\n\",\"      <td>property_type_Entire villa</td>\\n\",\"      <td>0.213</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>4</th>\\n\",\"      <td>room_type_Entire home/apt</td>\\n\",\"      <td>0.208</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>5</th>\\n\",\"      <td>availability_30</td>\\n\",\"      <td>0.208</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>6</th>\\n\",\"      <td>neighbourhood_Grünerløkka</td>\\n\",\"      <td>0.172</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>7</th>\\n\",\"      <td>bedrooms</td>\\n\",\"      <td>0.162</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>8</th>\\n\",\"      <td>accommodates</td>\\n\",\"      <td>0.145</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>9</th>\\n\",\"      <td>neighbourhood_Gamle Oslo</td>\\n\",\"      <td>0.134</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>10</th>\\n\",\"      <td>property_type_Entire serviced apartment</td>\\n\",\"      <td>0.130</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>11</th>\\n\",\"      <td>cnn_pretrained_predictions</td>\\n\",\"      <td>0.125</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>12</th>\\n\",\"      <td>availability_90</td>\\n\",\"      <td>0.086</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>13</th>\\n\",\"      <td>maximum_minimum_nights</td>\\n\",\"      <td>0.076</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>14</th>\\n\",\"      <td>neighbourhood_Ullern</td>\\n\",\"      <td>0.072</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>15</th>\\n\",\"      <td>property_type_Private room in residential home</td>\\n\",\"      <td>-0.095</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>16</th>\\n\",\"      <td>availability_60</td>\\n\",\"      <td>-0.096</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>17</th>\\n\",\"      <td>minimum_nights_avg_ntm</td>\\n\",\"      <td>-0.102</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>18</th>\\n\",\"      <td>neighbourhood_Alna</td>\\n\",\"      <td>-0.144</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>19</th>\\n\",\"      <td>neighbourhood_Østensjø</td>\\n\",\"      <td>-0.158</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>20</th>\\n\",\"      <td>neighbourhood_Søndre Nordstrand</td>\\n\",\"      <td>-0.185</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>21</th>\\n\",\"      <td>property_type_Private room in rental unit</td>\\n\",\"      <td>-0.211</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>22</th>\\n\",\"      <td>neighbourhood_Grorud</td>\\n\",\"      <td>-0.254</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>23</th>\\n\",\"      <td>property_type_Private room in condominium (condo)</td>\\n\",\"      <td>-0.267</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>24</th>\\n\",\"      <td>property_type_Others</td>\\n\",\"      <td>-0.392</td>\\n\",\"    </tr>\\n\",\"  </tbody>\\n\",\"</table>\\n\",\"</div>\"],\"text/plain\":[\"                                              feature  coefficient\\n\",\"0                               neighbourhood_Sentrum        0.291\\n\",\"1                               neighbourhood_Frogner        0.259\\n\",\"2                        neighbourhood_St. Hanshaugen        0.223\\n\",\"3                          property_type_Entire villa        0.213\\n\",\"4                           room_type_Entire home/apt        0.208\\n\",\"5                                     availability_30        0.208\\n\",\"6                           neighbourhood_Grünerløkka        0.172\\n\",\"7                                            bedrooms        0.162\\n\",\"8                                        accommodates        0.145\\n\",\"9                            neighbourhood_Gamle Oslo        0.134\\n\",\"10            property_type_Entire serviced apartment        0.130\\n\",\"11                         cnn_pretrained_predictions        0.125\\n\",\"12                                    availability_90        0.086\\n\",\"13                             maximum_minimum_nights        0.076\\n\",\"14                               neighbourhood_Ullern        0.072\\n\",\"15     property_type_Private room in residential home       -0.095\\n\",\"16                                    availability_60       -0.096\\n\",\"17                             minimum_nights_avg_ntm       -0.102\\n\",\"18                                 neighbourhood_Alna       -0.144\\n\",\"19                             neighbourhood_Østensjø       -0.158\\n\",\"20                    neighbourhood_Søndre Nordstrand       -0.185\\n\",\"21          property_type_Private room in rental unit       -0.211\\n\",\"22                               neighbourhood_Grorud       -0.254\\n\",\"23  property_type_Private room in condominium (condo)       -0.267\\n\",\"24                               property_type_Others       -0.392\"]},\"execution_count\":14,\"metadata\":{},\"output_type\":\"execute_result\"}],\"source\":[\"# SUBSECTION: Analyze Coefficients for different values of num_features\\n\",\"num_features = 25\\n\",\"rfe = RFE(SVR(kernel=\\\"linear\\\"), n_features_to_select=num_features, step=0.5)\\n\",\"preprocessor = get_preprocessor(column_transformer, rfe)\\n\",\"model = LinearRegression()\\n\",\"\\n\",\"pipeline = make_pipeline(preprocessor, model)\\n\",\"log_transform = TransformedTargetRegressor(pipeline, func=np.log, inverse_func=np.exp)\\n\",\"\\n\",\"log_transform.fit(X, y)\\n\",\"coefs = show_coefficients(log_transform)\\n\",\"coefs\\n\"]},{\"cell_type\":\"code\",\"execution_count\":15,\"metadata\":{},\"outputs\":[{\"data\":{\"text/html\":[\"<div>\\n\",\"<style scoped>\\n\",\"    .dataframe tbody tr th:only-of-type {\\n\",\"        vertical-align: middle;\\n\",\"    }\\n\",\"\\n\",\"    .dataframe tbody tr th {\\n\",\"        vertical-align: top;\\n\",\"    }\\n\",\"\\n\",\"    .dataframe thead th {\\n\",\"        text-align: right;\\n\",\"    }\\n\",\"</style>\\n\",\"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\"  <thead>\\n\",\"    <tr style=\\\"text-align: right;\\\">\\n\",\"      <th></th>\\n\",\"      <th>feature</th>\\n\",\"      <th>coefficient</th>\\n\",\"    </tr>\\n\",\"  </thead>\\n\",\"  <tbody>\\n\",\"    <tr>\\n\",\"      <th>11</th>\\n\",\"      <td>cnn_pretrained_predictions</td>\\n\",\"      <td>0.125</td>\\n\",\"    </tr>\\n\",\"  </tbody>\\n\",\"</table>\\n\",\"</div>\"],\"text/plain\":[\"                       feature  coefficient\\n\",\"11  cnn_pretrained_predictions        0.125\"]},\"execution_count\":15,\"metadata\":{},\"output_type\":\"execute_result\"}],\"source\":[\"# at least some correlation with true price in new model\\n\",\"# coefs.loc[coefs[\\\"feature\\\"] == \\\"cnn_predictions\\\"]\\n\",\"coefs.loc[coefs[\\\"feature\\\"] == \\\"cnn_pretrained_predictions\\\"]\\n\"]},{\"cell_type\":\"code\",\"execution_count\":16,\"metadata\":{},\"outputs\":[],\"source\":[\"# BOOKMARK: Hyperparameters\\n\",\"random_state = 42\\n\",\"n_folds = 10\\n\",\"log_y = True\\n\",\"\\n\",\"# 112 total encoded features in listings_extended\\n\",\"# fitting with all 112 features leads to error of evaluating metrics\\n\",\"num_features_list = [10, 25, 50, 75]\\n\"]},{\"cell_type\":\"code\",\"execution_count\":17,\"metadata\":{},\"outputs\":[{\"name\":\"stdout\",\"output_type\":\"stream\",\"text\":[\"Fitting LinearRegression\\n\",\"Finished training in 41.05 seconds\\n\",\"Fitting LinearRegression\\n\",\"Finished training in 43.01 seconds\\n\",\"Fitting LinearRegression\\n\",\"Finished training in 33.51 seconds\\n\",\"Fitting LinearRegression\\n\",\"Finished training in 38.88 seconds\\n\"]}],\"source\":[\"# SUBSECTION: Analyze Performance for different values of num_features\\n\",\"result_list = []\\n\",\"for num_features in num_features_list:\\n\",\"    if num_features is None:\\n\",\"        preprocessor = column_transformer\\n\",\"    else:\\n\",\"        rfe = RFE(SVR(kernel=\\\"linear\\\"), n_features_to_select=num_features, step=0.5)\\n\",\"        preprocessor = get_preprocessor(column_transformer, rfe)\\n\",\"\\n\",\"    models = get_models(\\n\",\"        preprocessor, models=[\\\"linear\\\"], random_state=random_state, log_y=log_y\\n\",\"    )\\n\",\"    result_container = ResultContainer()\\n\",\"\\n\",\"    result = fit_models(\\n\",\"        X,\\n\",\"        y,\\n\",\"        models,\\n\",\"        result_container,\\n\",\"        n_folds,\\n\",\"        random_state=random_state,\\n\",\"        log_y=log_y,\\n\",\"    )\\n\",\"    result_list.append(result.display_df())\\n\",\"\\n\",\"collected_results = pd.concat(result_list)\\n\",\"\\n\"]},{\"cell_type\":\"code\",\"execution_count\":18,\"metadata\":{},\"outputs\":[{\"data\":{\"text/html\":[\"<div>\\n\",\"<style scoped>\\n\",\"    .dataframe tbody tr th:only-of-type {\\n\",\"        vertical-align: middle;\\n\",\"    }\\n\",\"\\n\",\"    .dataframe tbody tr th {\\n\",\"        vertical-align: top;\\n\",\"    }\\n\",\"\\n\",\"    .dataframe thead th {\\n\",\"        text-align: right;\\n\",\"    }\\n\",\"</style>\\n\",\"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\"  <thead>\\n\",\"    <tr style=\\\"text-align: right;\\\">\\n\",\"      <th></th>\\n\",\"      <th>mae_train</th>\\n\",\"      <th>mae_val</th>\\n\",\"      <th>r2_train</th>\\n\",\"      <th>r2_val</th>\\n\",\"      <th>mse_train</th>\\n\",\"      <th>mse_val</th>\\n\",\"      <th>hyperparam_keys</th>\\n\",\"      <th>hyperparam_values</th>\\n\",\"      <th>num_features</th>\\n\",\"      <th>feature_selector</th>\\n\",\"      <th>log_y</th>\\n\",\"    </tr>\\n\",\"  </thead>\\n\",\"  <tbody>\\n\",\"    <tr>\\n\",\"      <th>LinearRegression</th>\\n\",\"      <td>437.733</td>\\n\",\"      <td>453.917</td>\\n\",\"      <td>0.436</td>\\n\",\"      <td>0.320</td>\\n\",\"      <td>1.921e+06</td>\\n\",\"      <td>2.083e+06</td>\\n\",\"      <td>None</td>\\n\",\"      <td>None</td>\\n\",\"      <td>50</td>\\n\",\"      <td>RFE</td>\\n\",\"      <td>True</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>LinearRegression</th>\\n\",\"      <td>437.458</td>\\n\",\"      <td>458.260</td>\\n\",\"      <td>0.431</td>\\n\",\"      <td>0.292</td>\\n\",\"      <td>1.937e+06</td>\\n\",\"      <td>2.132e+06</td>\\n\",\"      <td>None</td>\\n\",\"      <td>None</td>\\n\",\"      <td>75</td>\\n\",\"      <td>RFE</td>\\n\",\"      <td>True</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>LinearRegression</th>\\n\",\"      <td>446.187</td>\\n\",\"      <td>458.723</td>\\n\",\"      <td>0.429</td>\\n\",\"      <td>0.337</td>\\n\",\"      <td>1.945e+06</td>\\n\",\"      <td>2.009e+06</td>\\n\",\"      <td>None</td>\\n\",\"      <td>None</td>\\n\",\"      <td>25</td>\\n\",\"      <td>RFE</td>\\n\",\"      <td>True</td>\\n\",\"    </tr>\\n\",\"    <tr>\\n\",\"      <th>LinearRegression</th>\\n\",\"      <td>460.222</td>\\n\",\"      <td>469.890</td>\\n\",\"      <td>0.416</td>\\n\",\"      <td>0.311</td>\\n\",\"      <td>1.987e+06</td>\\n\",\"      <td>2.118e+06</td>\\n\",\"      <td>None</td>\\n\",\"      <td>None</td>\\n\",\"      <td>10</td>\\n\",\"      <td>RFE</td>\\n\",\"      <td>True</td>\\n\",\"    </tr>\\n\",\"  </tbody>\\n\",\"</table>\\n\",\"</div>\"],\"text/plain\":[\"                  mae_train  mae_val  r2_train  r2_val  mse_train    mse_val  \\\\\\n\",\"LinearRegression    437.733  453.917     0.436   0.320  1.921e+06  2.083e+06   \\n\",\"LinearRegression    437.458  458.260     0.431   0.292  1.937e+06  2.132e+06   \\n\",\"LinearRegression    446.187  458.723     0.429   0.337  1.945e+06  2.009e+06   \\n\",\"LinearRegression    460.222  469.890     0.416   0.311  1.987e+06  2.118e+06   \\n\",\"\\n\",\"                 hyperparam_keys hyperparam_values  num_features  \\\\\\n\",\"LinearRegression            None              None            50   \\n\",\"LinearRegression            None              None            75   \\n\",\"LinearRegression            None              None            25   \\n\",\"LinearRegression            None              None            10   \\n\",\"\\n\",\"                 feature_selector  log_y  \\n\",\"LinearRegression              RFE   True  \\n\",\"LinearRegression              RFE   True  \\n\",\"LinearRegression              RFE   True  \\n\",\"LinearRegression              RFE   True  \"]},\"execution_count\":18,\"metadata\":{},\"output_type\":\"execute_result\"}],\"source\":[\"collected_results.sort_values(\\\"mae_val\\\")\\n\"]},{\"cell_type\":\"code\",\"execution_count\":null,\"metadata\":{},\"outputs\":[],\"source\":[]}],\"metadata\":{\"interpreter\":{\"hash\":\"e37bdcff8e285aecd676ae6b9519e491882e2bf7035a530938e04408c0c6fc0d\"},\"kernelspec\":{\"display_name\":\"Python 3.9.9 64-bit ('airbnb': conda)\",\"language\":\"python\",\"name\":\"python3\"},\"language_info\":{\"codemirror_mode\":{\"name\":\"ipython\",\"version\":3},\"file_extension\":\".py\",\"mimetype\":\"text/x-python\",\"name\":\"python\",\"nbconvert_exporter\":\"python\",\"pygments_lexer\":\"ipython3\",\"version\":\"3.9.9\"},\"orig_nbformat\":4},\"nbformat\":4,\"nbformat_minor\":2}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/models/extended_models.ipynb b/models/extended_models.ipynb
--- a/models/extended_models.ipynb	(revision ca36598c58d75074e28f0972740cb05835f872b0)
+++ b/models/extended_models.ipynb	(date 1642665798770)
@@ -1,1 +1,652 @@
-{"cells":[{"cell_type":"code","execution_count":10,"metadata":{},"outputs":[],"source":["from warnings import simplefilter\n","\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","from sklearn.compose import TransformedTargetRegressor\n","from sklearn.feature_selection import RFE\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_absolute_error\n","from sklearn.pipeline import make_pipeline\n","from sklearn.svm import SVR\n","\n","from sklearn_helpers import (\n","    ResultContainer,\n","    fit_models,\n","    get_column_transformer,\n","    get_models,\n","    get_preprocessor,\n","    show_coefficients,\n",")\n","\n","simplefilter(action=\"ignore\", category=FutureWarning)\n","pd.set_option(\"precision\", 3)\n","pd.set_option(\"display.max_columns\", 100)\n","sns.set_theme(style=\"whitegrid\")\n"]},{"cell_type":"code","execution_count":11,"metadata":{},"outputs":[{"data":{"text/plain":["(2601, 39)"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["# NOTE: For Experimentation we train model on the entire data set without splitting in training and test set\n","listings_extended = pd.read_pickle(\"../data-clean/listings_extended.pkl\")\n","X = listings_extended.drop(columns=\"price\")\n","y = listings_extended[\"price\"]\n","\n","X.shape\n"]},{"cell_type":"code","execution_count":12,"metadata":{},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"","text/plain":["<Figure size 432x432 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"","text/plain":["<Figure size 432x432 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# SUBSECTION: Exploration of CNN Price Predictions\n","\n","# Pretrained CNN\n","sns.histplot(X[\"cnn_pretrained_predictions\"]).set(\n","    title=\"Price Predictions of Pretrained CNN\"\n",")\n","\n","# Correlation of price predictions and true price pretty much zero\n","cor = y.astype(\"float\").corr(X[\"cnn_pretrained_predictions\"])\n","mae = mean_absolute_error(y, X[\"cnn_pretrained_predictions\"])\n","price_range = [y.min(), y.max()]\n","\n","fig, ax = plt.subplots(figsize=(6, 6))\n","ax.scatter(y, X[\"cnn_pretrained_predictions\"])\n","ax.plot(price_range, price_range, linestyle=\"dashed\", color=\"grey\")\n","ax.set(\n","    xlabel=\"True Price\",\n","    ylabel=\"Predictions\",\n","    title=f\"Pretrained CNN:\\nCorrelation Coefficient with true Price: {cor:.3f}\\nMean Absolute Error: {mae:.1f}\",\n",")\n","plt.show()\n","\n","# Custom CNN\n","sns.histplot(X[\"cnn_predictions\"]).set(title=\"Price Predictions of Custom CNN\")\n","\n","# Correlation of price predictions and true price pretty much zero\n","cor = y.astype(\"float\").corr(X[\"cnn_predictions\"])\n","mae = mean_absolute_error(y, X[\"cnn_predictions\"])\n","price_range = [y.min(), y.max()]\n","\n","fig, ax = plt.subplots(figsize=(6, 6))\n","ax.scatter(y, X[\"cnn_predictions\"])\n","ax.plot(price_range, price_range, linestyle=\"dashed\", color=\"grey\")\n","ax.set(\n","    xlabel=\"True Price\",\n","    ylabel=\"Predictions\",\n","    title=f\"Custom CNN:\\nCorrelation Coefficient with true Price: {cor:.3f}\\nMean Absolute Error: {mae:.1f}\",\n",")\n","plt.show()\n"]},{"cell_type":"code","execution_count":13,"metadata":{},"outputs":[],"source":["column_transformer = get_column_transformer()\n"]},{"cell_type":"code","execution_count":14,"metadata":{},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>feature</th>\n","      <th>coefficient</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>neighbourhood_Sentrum</td>\n","      <td>0.291</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>neighbourhood_Frogner</td>\n","      <td>0.259</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>neighbourhood_St. Hanshaugen</td>\n","      <td>0.223</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>property_type_Entire villa</td>\n","      <td>0.213</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>room_type_Entire home/apt</td>\n","      <td>0.208</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>availability_30</td>\n","      <td>0.208</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>neighbourhood_Grünerløkka</td>\n","      <td>0.172</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>bedrooms</td>\n","      <td>0.162</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>accommodates</td>\n","      <td>0.145</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>neighbourhood_Gamle Oslo</td>\n","      <td>0.134</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>property_type_Entire serviced apartment</td>\n","      <td>0.130</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>cnn_pretrained_predictions</td>\n","      <td>0.125</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>availability_90</td>\n","      <td>0.086</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>maximum_minimum_nights</td>\n","      <td>0.076</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>neighbourhood_Ullern</td>\n","      <td>0.072</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>property_type_Private room in residential home</td>\n","      <td>-0.095</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>availability_60</td>\n","      <td>-0.096</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>minimum_nights_avg_ntm</td>\n","      <td>-0.102</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>neighbourhood_Alna</td>\n","      <td>-0.144</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>neighbourhood_Østensjø</td>\n","      <td>-0.158</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>neighbourhood_Søndre Nordstrand</td>\n","      <td>-0.185</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>property_type_Private room in rental unit</td>\n","      <td>-0.211</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>neighbourhood_Grorud</td>\n","      <td>-0.254</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>property_type_Private room in condominium (condo)</td>\n","      <td>-0.267</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>property_type_Others</td>\n","      <td>-0.392</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                              feature  coefficient\n","0                               neighbourhood_Sentrum        0.291\n","1                               neighbourhood_Frogner        0.259\n","2                        neighbourhood_St. Hanshaugen        0.223\n","3                          property_type_Entire villa        0.213\n","4                           room_type_Entire home/apt        0.208\n","5                                     availability_30        0.208\n","6                           neighbourhood_Grünerløkka        0.172\n","7                                            bedrooms        0.162\n","8                                        accommodates        0.145\n","9                            neighbourhood_Gamle Oslo        0.134\n","10            property_type_Entire serviced apartment        0.130\n","11                         cnn_pretrained_predictions        0.125\n","12                                    availability_90        0.086\n","13                             maximum_minimum_nights        0.076\n","14                               neighbourhood_Ullern        0.072\n","15     property_type_Private room in residential home       -0.095\n","16                                    availability_60       -0.096\n","17                             minimum_nights_avg_ntm       -0.102\n","18                                 neighbourhood_Alna       -0.144\n","19                             neighbourhood_Østensjø       -0.158\n","20                    neighbourhood_Søndre Nordstrand       -0.185\n","21          property_type_Private room in rental unit       -0.211\n","22                               neighbourhood_Grorud       -0.254\n","23  property_type_Private room in condominium (condo)       -0.267\n","24                               property_type_Others       -0.392"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["# SUBSECTION: Analyze Coefficients for different values of num_features\n","num_features = 25\n","rfe = RFE(SVR(kernel=\"linear\"), n_features_to_select=num_features, step=0.5)\n","preprocessor = get_preprocessor(column_transformer, rfe)\n","model = LinearRegression()\n","\n","pipeline = make_pipeline(preprocessor, model)\n","log_transform = TransformedTargetRegressor(pipeline, func=np.log, inverse_func=np.exp)\n","\n","log_transform.fit(X, y)\n","coefs = show_coefficients(log_transform)\n","coefs\n"]},{"cell_type":"code","execution_count":15,"metadata":{},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>feature</th>\n","      <th>coefficient</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>11</th>\n","      <td>cnn_pretrained_predictions</td>\n","      <td>0.125</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                       feature  coefficient\n","11  cnn_pretrained_predictions        0.125"]},"execution_count":15,"metadata":{},"output_type":"execute_result"}],"source":["# at least some correlation with true price in new model\n","# coefs.loc[coefs[\"feature\"] == \"cnn_predictions\"]\n","coefs.loc[coefs[\"feature\"] == \"cnn_pretrained_predictions\"]\n"]},{"cell_type":"code","execution_count":16,"metadata":{},"outputs":[],"source":["# BOOKMARK: Hyperparameters\n","random_state = 42\n","n_folds = 10\n","log_y = True\n","\n","# 112 total encoded features in listings_extended\n","# fitting with all 112 features leads to error of evaluating metrics\n","num_features_list = [10, 25, 50, 75]\n"]},{"cell_type":"code","execution_count":17,"metadata":{},"outputs":[{"name":"stdout","output_type":"stream","text":["Fitting LinearRegression\n","Finished training in 41.05 seconds\n","Fitting LinearRegression\n","Finished training in 43.01 seconds\n","Fitting LinearRegression\n","Finished training in 33.51 seconds\n","Fitting LinearRegression\n","Finished training in 38.88 seconds\n"]}],"source":["# SUBSECTION: Analyze Performance for different values of num_features\n","result_list = []\n","for num_features in num_features_list:\n","    if num_features is None:\n","        preprocessor = column_transformer\n","    else:\n","        rfe = RFE(SVR(kernel=\"linear\"), n_features_to_select=num_features, step=0.5)\n","        preprocessor = get_preprocessor(column_transformer, rfe)\n","\n","    models = get_models(\n","        preprocessor, models=[\"linear\"], random_state=random_state, log_y=log_y\n","    )\n","    result_container = ResultContainer()\n","\n","    result = fit_models(\n","        X,\n","        y,\n","        models,\n","        result_container,\n","        n_folds,\n","        random_state=random_state,\n","        log_y=log_y,\n","    )\n","    result_list.append(result.display_df())\n","\n","collected_results = pd.concat(result_list)\n","\n"]},{"cell_type":"code","execution_count":18,"metadata":{},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mae_train</th>\n","      <th>mae_val</th>\n","      <th>r2_train</th>\n","      <th>r2_val</th>\n","      <th>mse_train</th>\n","      <th>mse_val</th>\n","      <th>hyperparam_keys</th>\n","      <th>hyperparam_values</th>\n","      <th>num_features</th>\n","      <th>feature_selector</th>\n","      <th>log_y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>LinearRegression</th>\n","      <td>437.733</td>\n","      <td>453.917</td>\n","      <td>0.436</td>\n","      <td>0.320</td>\n","      <td>1.921e+06</td>\n","      <td>2.083e+06</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>50</td>\n","      <td>RFE</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression</th>\n","      <td>437.458</td>\n","      <td>458.260</td>\n","      <td>0.431</td>\n","      <td>0.292</td>\n","      <td>1.937e+06</td>\n","      <td>2.132e+06</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>75</td>\n","      <td>RFE</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression</th>\n","      <td>446.187</td>\n","      <td>458.723</td>\n","      <td>0.429</td>\n","      <td>0.337</td>\n","      <td>1.945e+06</td>\n","      <td>2.009e+06</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>25</td>\n","      <td>RFE</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>LinearRegression</th>\n","      <td>460.222</td>\n","      <td>469.890</td>\n","      <td>0.416</td>\n","      <td>0.311</td>\n","      <td>1.987e+06</td>\n","      <td>2.118e+06</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>10</td>\n","      <td>RFE</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                  mae_train  mae_val  r2_train  r2_val  mse_train    mse_val  \\\n","LinearRegression    437.733  453.917     0.436   0.320  1.921e+06  2.083e+06   \n","LinearRegression    437.458  458.260     0.431   0.292  1.937e+06  2.132e+06   \n","LinearRegression    446.187  458.723     0.429   0.337  1.945e+06  2.009e+06   \n","LinearRegression    460.222  469.890     0.416   0.311  1.987e+06  2.118e+06   \n","\n","                 hyperparam_keys hyperparam_values  num_features  \\\n","LinearRegression            None              None            50   \n","LinearRegression            None              None            75   \n","LinearRegression            None              None            25   \n","LinearRegression            None              None            10   \n","\n","                 feature_selector  log_y  \n","LinearRegression              RFE   True  \n","LinearRegression              RFE   True  \n","LinearRegression              RFE   True  \n","LinearRegression              RFE   True  "]},"execution_count":18,"metadata":{},"output_type":"execute_result"}],"source":["collected_results.sort_values(\"mae_val\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":[]}],"metadata":{"interpreter":{"hash":"e37bdcff8e285aecd676ae6b9519e491882e2bf7035a530938e04408c0c6fc0d"},"kernelspec":{"display_name":"Python 3.9.9 64-bit ('airbnb': conda)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.9"},"orig_nbformat":4},"nbformat":4,"nbformat_minor":2}
+{
+ "cells": [
+  {
+   "cell_type": "code",
+   "execution_count": 10,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "from warnings import simplefilter\n",
+    "\n",
+    "import matplotlib.pyplot as plt\n",
+    "import numpy as np\n",
+    "import pandas as pd\n",
+    "import seaborn as sns\n",
+    "from sklearn.compose import TransformedTargetRegressor\n",
+    "from sklearn.feature_selection import RFE\n",
+    "from sklearn.linear_model import LinearRegression\n",
+    "from sklearn.metrics import mean_absolute_error\n",
+    "from sklearn.pipeline import make_pipeline\n",
+    "from sklearn.svm import SVR\n",
+    "\n",
+    "from sklearn_helpers import (\n",
+    "    ResultContainer,\n",
+    "    fit_models,\n",
+    "    get_column_transformer,\n",
+    "    get_models,\n",
+    "    get_preprocessor,\n",
+    "    show_coefficients,\n",
+    ")\n",
+    "\n",
+    "simplefilter(action=\"ignore\", category=FutureWarning)\n",
+    "pd.set_option(\"precision\", 3)\n",
+    "pd.set_option(\"display.max_columns\", 100)\n",
+    "sns.set_theme(style=\"whitegrid\")\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 11,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "(2601, 39)"
+      ]
+     },
+     "execution_count": 11,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "# NOTE: For Experimentation we train model on the entire data set without splitting in training and test set\n",
+    "listings_extended = pd.read_pickle(\"../data-clean/listings_extended.pkl\")\n",
+    "X = listings_extended.drop(columns=\"price\")\n",
+    "y = listings_extended[\"price\"]\n",
+    "\n",
+    "X.shape\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 12,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 432x288 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "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8UWOb7J2dnYsXLiQjz/+mPT0dDQaDZ9++inNmjXj1KlThW73okWLmD9/Pv7+/pibm6PX6xk4cCCvv/46AMHBwcyePZvNmzeTmZmJr68v/v7+aDQaFi1axLx588jIyEApxbx582jYsCE3b9584n5btWrF5MmTDYP59vb2/Pvf/+bq1auGdf7xj3/w2WefMWjQIHQ6HW3atCEoKOiJ2/b29mbUqFEsXrw416SML730Ej/88ANt27bFzMyMqlWr5jlt/OPbKSx3d3fDN/HHDRgwgEOHDuHp6Um9evV4/vnnDT2VadOmMWfOHMPv1wsvvGB4b0pC3bp1CQ4OZsqUKeh0OqytrZk/fz52dnb5/hwh/wH4ESNGcP36dfz8/NBqtQwbNszwRWbhwoXA098Vs02bNsycOZO3336brKwsatasadhmZSBzcwkhhCg2OcwlhBCi2CRMhBBCFJuEiShVN2/epFWrVrnuBAgQFBREq1atnnpKkaK6cOECrVq1Mlzcl23x4sV5Tp/xNAo79czTTGdy8+ZN2rRpg5+fX67/jDmdzuMSEhL45z//ycCBA/H29s5z2pzly5fneB9SUlKYNGkS/fv3p1+/fnz//fd5bjstLY1//vOf9O3bFy8vL8P0PKLskQF4UeqsrKy4cuUKt27dMtw/PfvakNK0evVqfH19WbVqFWPGjCnUdRXGEhkZWajrXB73pNsRl4agoCCaN2/O559/zt27d/H19aVbt26GU24jIyP57rvvctwa+IcffqBq1ars2LGD5ORkfHx86NKlS64r0RcvXkz16tXZuXMnt2/fZtiwYTg7O+c6nVeYnoSJKHXm5ub07duX7du3G84s2717N3369DFcaAiwb98+li5dilarpWrVqkyZMoWOHTsSFxfHjBkzuHfvHrGxsTg5ObFgwQLq1KmT73Qlj0tOTmb79u1s2LCBP/74g127duHj42N4/q+//iIgIIAHDx4YztKxtrZm9erVrF27FktLS6ysrJg9ezYtWrTg0qVLzJ49m4SEBDQaDWPGjGHgwIE59hkUFGSYUubRx40bN84xnUlAQABLly5l9+7d6PV6nJycmDlzJvXq1SvS+7x582Y2btxIWloa1tbWDBo0KMfj0NBQvvrqK3788UfMzc1p1qwZH330Efb29rmmN2nQoAFr167l22+/zbGPhIQEjhw5wvz584GH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",
+      "text/plain": [
+       "<Figure size 432x432 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 432x288 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    },
+    {
+     "data": {
+      "image/png": "",
+      "text/plain": [
+       "<Figure size 432x432 with 1 Axes>"
+      ]
+     },
+     "metadata": {},
+     "output_type": "display_data"
+    }
+   ],
+   "source": [
+    "# SUBSECTION: Exploration of CNN Price Predictions\n",
+    "\n",
+    "# Pretrained CNN\n",
+    "sns.histplot(X[\"cnn_pretrained_predictions\"]).set(\n",
+    "    title=\"Price Predictions of Pretrained CNN\"\n",
+    ")\n",
+    "\n",
+    "# Correlation of price predictions and true price pretty much zero\n",
+    "cor = y.astype(\"float\").corr(X[\"cnn_pretrained_predictions\"])\n",
+    "mae = mean_absolute_error(y, X[\"cnn_pretrained_predictions\"])\n",
+    "price_range = [y.min(), y.max()]\n",
+    "\n",
+    "fig, ax = plt.subplots(figsize=(6, 6))\n",
+    "ax.scatter(y, X[\"cnn_pretrained_predictions\"])\n",
+    "ax.plot(price_range, price_range, linestyle=\"dashed\", color=\"grey\")\n",
+    "ax.set(\n",
+    "    xlabel=\"True Price\",\n",
+    "    ylabel=\"Predictions\",\n",
+    "    title=f\"Pretrained CNN:\\nCorrelation Coefficient with true Price: {cor:.3f}\\nMean Absolute Error: {mae:.1f}\",\n",
+    ")\n",
+    "plt.show()\n",
+    "\n",
+    "# Custom CNN\n",
+    "sns.histplot(X[\"cnn_predictions\"]).set(title=\"Price Predictions of Custom CNN\")\n",
+    "\n",
+    "# Correlation of price predictions and true price pretty much zero\n",
+    "cor = y.astype(\"float\").corr(X[\"cnn_predictions\"])\n",
+    "mae = mean_absolute_error(y, X[\"cnn_predictions\"])\n",
+    "price_range = [y.min(), y.max()]\n",
+    "\n",
+    "fig, ax = plt.subplots(figsize=(6, 6))\n",
+    "ax.scatter(y, X[\"cnn_predictions\"])\n",
+    "ax.plot(price_range, price_range, linestyle=\"dashed\", color=\"grey\")\n",
+    "ax.set(\n",
+    "    xlabel=\"True Price\",\n",
+    "    ylabel=\"Predictions\",\n",
+    "    title=f\"Custom CNN:\\nCorrelation Coefficient with true Price: {cor:.3f}\\nMean Absolute Error: {mae:.1f}\",\n",
+    ")\n",
+    "plt.show()\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 13,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "column_transformer = get_column_transformer()\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 14,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>feature</th>\n",
+       "      <th>coefficient</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>0</th>\n",
+       "      <td>neighbourhood_Sentrum</td>\n",
+       "      <td>0.291</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>1</th>\n",
+       "      <td>neighbourhood_Frogner</td>\n",
+       "      <td>0.259</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>2</th>\n",
+       "      <td>neighbourhood_St. Hanshaugen</td>\n",
+       "      <td>0.223</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>3</th>\n",
+       "      <td>property_type_Entire villa</td>\n",
+       "      <td>0.213</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>4</th>\n",
+       "      <td>room_type_Entire home/apt</td>\n",
+       "      <td>0.208</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>5</th>\n",
+       "      <td>availability_30</td>\n",
+       "      <td>0.208</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>6</th>\n",
+       "      <td>neighbourhood_Grünerløkka</td>\n",
+       "      <td>0.172</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>7</th>\n",
+       "      <td>bedrooms</td>\n",
+       "      <td>0.162</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>8</th>\n",
+       "      <td>accommodates</td>\n",
+       "      <td>0.145</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>9</th>\n",
+       "      <td>neighbourhood_Gamle Oslo</td>\n",
+       "      <td>0.134</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>10</th>\n",
+       "      <td>property_type_Entire serviced apartment</td>\n",
+       "      <td>0.130</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>11</th>\n",
+       "      <td>cnn_pretrained_predictions</td>\n",
+       "      <td>0.125</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>12</th>\n",
+       "      <td>availability_90</td>\n",
+       "      <td>0.086</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>13</th>\n",
+       "      <td>maximum_minimum_nights</td>\n",
+       "      <td>0.076</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>14</th>\n",
+       "      <td>neighbourhood_Ullern</td>\n",
+       "      <td>0.072</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>15</th>\n",
+       "      <td>property_type_Private room in residential home</td>\n",
+       "      <td>-0.095</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>16</th>\n",
+       "      <td>availability_60</td>\n",
+       "      <td>-0.096</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>17</th>\n",
+       "      <td>minimum_nights_avg_ntm</td>\n",
+       "      <td>-0.102</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>18</th>\n",
+       "      <td>neighbourhood_Alna</td>\n",
+       "      <td>-0.144</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>19</th>\n",
+       "      <td>neighbourhood_Østensjø</td>\n",
+       "      <td>-0.158</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>20</th>\n",
+       "      <td>neighbourhood_Søndre Nordstrand</td>\n",
+       "      <td>-0.185</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>21</th>\n",
+       "      <td>property_type_Private room in rental unit</td>\n",
+       "      <td>-0.211</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>22</th>\n",
+       "      <td>neighbourhood_Grorud</td>\n",
+       "      <td>-0.254</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>23</th>\n",
+       "      <td>property_type_Private room in condominium (condo)</td>\n",
+       "      <td>-0.267</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>24</th>\n",
+       "      <td>property_type_Others</td>\n",
+       "      <td>-0.392</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                                              feature  coefficient\n",
+       "0                               neighbourhood_Sentrum        0.291\n",
+       "1                               neighbourhood_Frogner        0.259\n",
+       "2                        neighbourhood_St. Hanshaugen        0.223\n",
+       "3                          property_type_Entire villa        0.213\n",
+       "4                           room_type_Entire home/apt        0.208\n",
+       "5                                     availability_30        0.208\n",
+       "6                           neighbourhood_Grünerløkka        0.172\n",
+       "7                                            bedrooms        0.162\n",
+       "8                                        accommodates        0.145\n",
+       "9                            neighbourhood_Gamle Oslo        0.134\n",
+       "10            property_type_Entire serviced apartment        0.130\n",
+       "11                         cnn_pretrained_predictions        0.125\n",
+       "12                                    availability_90        0.086\n",
+       "13                             maximum_minimum_nights        0.076\n",
+       "14                               neighbourhood_Ullern        0.072\n",
+       "15     property_type_Private room in residential home       -0.095\n",
+       "16                                    availability_60       -0.096\n",
+       "17                             minimum_nights_avg_ntm       -0.102\n",
+       "18                                 neighbourhood_Alna       -0.144\n",
+       "19                             neighbourhood_Østensjø       -0.158\n",
+       "20                    neighbourhood_Søndre Nordstrand       -0.185\n",
+       "21          property_type_Private room in rental unit       -0.211\n",
+       "22                               neighbourhood_Grorud       -0.254\n",
+       "23  property_type_Private room in condominium (condo)       -0.267\n",
+       "24                               property_type_Others       -0.392"
+      ]
+     },
+     "execution_count": 14,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "# SUBSECTION: Analyze Coefficients for different values of num_features\n",
+    "num_features = 25\n",
+    "rfe = RFE(SVR(kernel=\"linear\"), n_features_to_select=num_features, step=0.5)\n",
+    "preprocessor = get_preprocessor(column_transformer, rfe)\n",
+    "model = LinearRegression()\n",
+    "\n",
+    "pipeline = make_pipeline(preprocessor, model)\n",
+    "log_transform = TransformedTargetRegressor(pipeline, func=np.log, inverse_func=np.exp)\n",
+    "\n",
+    "log_transform.fit(X, y)\n",
+    "coefs = show_coefficients(log_transform)\n",
+    "coefs\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 15,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>feature</th>\n",
+       "      <th>coefficient</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>11</th>\n",
+       "      <td>cnn_pretrained_predictions</td>\n",
+       "      <td>0.125</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                       feature  coefficient\n",
+       "11  cnn_pretrained_predictions        0.125"
+      ]
+     },
+     "execution_count": 15,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "# at least some correlation with true price in new model\n",
+    "# coefs.loc[coefs[\"feature\"] == \"cnn_predictions\"]\n",
+    "coefs.loc[coefs[\"feature\"] == \"cnn_pretrained_predictions\"]\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 16,
+   "metadata": {},
+   "outputs": [],
+   "source": [
+    "# BOOKMARK: Hyperparameters\n",
+    "random_state = 42\n",
+    "n_folds = 10\n",
+    "log_y = True\n",
+    "\n",
+    "# 112 total encoded features in listings_extended\n",
+    "# fitting with all 112 features leads to error of evaluating metrics\n",
+    "num_features_list = [10, 25, 50, 75]\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 17,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "Fitting LinearRegression\n",
+      "Finished training in 41.05 seconds\n",
+      "Fitting LinearRegression\n",
+      "Finished training in 43.01 seconds\n",
+      "Fitting LinearRegression\n",
+      "Finished training in 33.51 seconds\n",
+      "Fitting LinearRegression\n",
+      "Finished training in 38.88 seconds\n"
+     ]
+    }
+   ],
+   "source": [
+    "# SUBSECTION: Analyze Performance for different values of num_features\n",
+    "result_list = []\n",
+    "for num_features in num_features_list:\n",
+    "    if num_features is None:\n",
+    "        preprocessor = column_transformer\n",
+    "    else:\n",
+    "        rfe = RFE(SVR(kernel=\"linear\"), n_features_to_select=num_features, step=0.5)\n",
+    "        preprocessor = get_preprocessor(column_transformer, rfe)\n",
+    "\n",
+    "    models = get_models(\n",
+    "        preprocessor, models=[\"linear\"], random_state=random_state, log_y=log_y\n",
+    "    )\n",
+    "    result_container = ResultContainer()\n",
+    "\n",
+    "    result = fit_models(\n",
+    "        X,\n",
+    "        y,\n",
+    "        models,\n",
+    "        result_container,\n",
+    "        n_folds,\n",
+    "        random_state=random_state,\n",
+    "        log_y=log_y,\n",
+    "    )\n",
+    "    result_list.append(result.display_df())\n",
+    "\n",
+    "collected_results = pd.concat(result_list)\n",
+    "\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 18,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/html": [
+       "<div>\n",
+       "<style scoped>\n",
+       "    .dataframe tbody tr th:only-of-type {\n",
+       "        vertical-align: middle;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe tbody tr th {\n",
+       "        vertical-align: top;\n",
+       "    }\n",
+       "\n",
+       "    .dataframe thead th {\n",
+       "        text-align: right;\n",
+       "    }\n",
+       "</style>\n",
+       "<table border=\"1\" class=\"dataframe\">\n",
+       "  <thead>\n",
+       "    <tr style=\"text-align: right;\">\n",
+       "      <th></th>\n",
+       "      <th>mae_train</th>\n",
+       "      <th>mae_val</th>\n",
+       "      <th>r2_train</th>\n",
+       "      <th>r2_val</th>\n",
+       "      <th>mse_train</th>\n",
+       "      <th>mse_val</th>\n",
+       "      <th>hyperparam_keys</th>\n",
+       "      <th>hyperparam_values</th>\n",
+       "      <th>num_features</th>\n",
+       "      <th>feature_selector</th>\n",
+       "      <th>log_y</th>\n",
+       "    </tr>\n",
+       "  </thead>\n",
+       "  <tbody>\n",
+       "    <tr>\n",
+       "      <th>LinearRegression</th>\n",
+       "      <td>437.733</td>\n",
+       "      <td>453.917</td>\n",
+       "      <td>0.436</td>\n",
+       "      <td>0.320</td>\n",
+       "      <td>1.921e+06</td>\n",
+       "      <td>2.083e+06</td>\n",
+       "      <td>None</td>\n",
+       "      <td>None</td>\n",
+       "      <td>50</td>\n",
+       "      <td>RFE</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>LinearRegression</th>\n",
+       "      <td>437.458</td>\n",
+       "      <td>458.260</td>\n",
+       "      <td>0.431</td>\n",
+       "      <td>0.292</td>\n",
+       "      <td>1.937e+06</td>\n",
+       "      <td>2.132e+06</td>\n",
+       "      <td>None</td>\n",
+       "      <td>None</td>\n",
+       "      <td>75</td>\n",
+       "      <td>RFE</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>LinearRegression</th>\n",
+       "      <td>446.187</td>\n",
+       "      <td>458.723</td>\n",
+       "      <td>0.429</td>\n",
+       "      <td>0.337</td>\n",
+       "      <td>1.945e+06</td>\n",
+       "      <td>2.009e+06</td>\n",
+       "      <td>None</td>\n",
+       "      <td>None</td>\n",
+       "      <td>25</td>\n",
+       "      <td>RFE</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "    <tr>\n",
+       "      <th>LinearRegression</th>\n",
+       "      <td>460.222</td>\n",
+       "      <td>469.890</td>\n",
+       "      <td>0.416</td>\n",
+       "      <td>0.311</td>\n",
+       "      <td>1.987e+06</td>\n",
+       "      <td>2.118e+06</td>\n",
+       "      <td>None</td>\n",
+       "      <td>None</td>\n",
+       "      <td>10</td>\n",
+       "      <td>RFE</td>\n",
+       "      <td>True</td>\n",
+       "    </tr>\n",
+       "  </tbody>\n",
+       "</table>\n",
+       "</div>"
+      ],
+      "text/plain": [
+       "                  mae_train  mae_val  r2_train  r2_val  mse_train    mse_val  \\\n",
+       "LinearRegression    437.733  453.917     0.436   0.320  1.921e+06  2.083e+06   \n",
+       "LinearRegression    437.458  458.260     0.431   0.292  1.937e+06  2.132e+06   \n",
+       "LinearRegression    446.187  458.723     0.429   0.337  1.945e+06  2.009e+06   \n",
+       "LinearRegression    460.222  469.890     0.416   0.311  1.987e+06  2.118e+06   \n",
+       "\n",
+       "                 hyperparam_keys hyperparam_values  num_features  \\\n",
+       "LinearRegression            None              None            50   \n",
+       "LinearRegression            None              None            75   \n",
+       "LinearRegression            None              None            25   \n",
+       "LinearRegression            None              None            10   \n",
+       "\n",
+       "                 feature_selector  log_y  \n",
+       "LinearRegression              RFE   True  \n",
+       "LinearRegression              RFE   True  \n",
+       "LinearRegression              RFE   True  \n",
+       "LinearRegression              RFE   True  "
+      ]
+     },
+     "execution_count": 18,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "collected_results.sort_values(\"mae_val\")\n"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
+  }
+ ],
+ "metadata": {
+  "interpreter": {
+   "hash": "e37bdcff8e285aecd676ae6b9519e491882e2bf7035a530938e04408c0c6fc0d"
+  },
+  "kernelspec": {
+   "display_name": "Python 3.9.9 64-bit ('airbnb': conda)",
+   "language": "python",
+   "name": "python3"
+  },
+  "language_info": {
+   "codemirror_mode": {
+    "name": "ipython",
+    "version": 3
+   },
+   "file_extension": ".py",
+   "mimetype": "text/x-python",
+   "name": "python",
+   "nbconvert_exporter": "python",
+   "pygments_lexer": "ipython3",
+   "version": "3.9.9"
+  },
+  "orig_nbformat": 4
+ },
+ "nbformat": 4,
+ "nbformat_minor": 2
+}
\ No newline at end of file
